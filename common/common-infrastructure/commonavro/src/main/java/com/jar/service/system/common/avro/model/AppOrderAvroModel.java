/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.jar.service.system.common.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AppOrderAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3619379275749787459L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AppOrderAvroModel\",\"namespace\":\"com.jar.service.system.common.avro.model\",\"fields\":[{\"name\":\"appOrderId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"userId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"storageId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"serverUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"applicationName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"serverPort\",\"type\":\"int\"},{\"name\":\"containerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"applicationStatus\",\"type\":{\"type\":\"enum\",\"name\":\"ApplicationStatus\",\"symbols\":[\"PENDING\",\"STARTED\",\"SAVED\",\"CONTAINERIZING\",\"COMPLETE\",\"FAILED\"]}},{\"name\":\"errorResult\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"messageType\",\"type\":{\"type\":\"enum\",\"name\":\"MessageType\",\"symbols\":[\"CREATE\",\"DELETE\",\"FAIL\",\"REJECT\",\"UPDATE\",\"NO_DEF\"],\"default\":\"NO_DEF\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AppOrderAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AppOrderAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AppOrderAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AppOrderAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AppOrderAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AppOrderAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AppOrderAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AppOrderAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AppOrderAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String appOrderId;
  private java.lang.String userId;
  private java.lang.String storageId;
  private java.lang.String serverUrl;
  private java.lang.String applicationName;
  private int serverPort;
  private java.lang.String containerId;
  private com.jar.service.system.common.avro.model.ApplicationStatus applicationStatus;
  private java.lang.String errorResult;
  private com.jar.service.system.common.avro.model.MessageType messageType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AppOrderAvroModel() {}

  /**
   * All-args constructor.
   * @param appOrderId The new value for appOrderId
   * @param userId The new value for userId
   * @param storageId The new value for storageId
   * @param serverUrl The new value for serverUrl
   * @param applicationName The new value for applicationName
   * @param serverPort The new value for serverPort
   * @param containerId The new value for containerId
   * @param applicationStatus The new value for applicationStatus
   * @param errorResult The new value for errorResult
   * @param messageType The new value for messageType
   */
  public AppOrderAvroModel(java.lang.String appOrderId, java.lang.String userId, java.lang.String storageId, java.lang.String serverUrl, java.lang.String applicationName, java.lang.Integer serverPort, java.lang.String containerId, com.jar.service.system.common.avro.model.ApplicationStatus applicationStatus, java.lang.String errorResult, com.jar.service.system.common.avro.model.MessageType messageType) {
    this.appOrderId = appOrderId;
    this.userId = userId;
    this.storageId = storageId;
    this.serverUrl = serverUrl;
    this.applicationName = applicationName;
    this.serverPort = serverPort;
    this.containerId = containerId;
    this.applicationStatus = applicationStatus;
    this.errorResult = errorResult;
    this.messageType = messageType;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return appOrderId;
    case 1: return userId;
    case 2: return storageId;
    case 3: return serverUrl;
    case 4: return applicationName;
    case 5: return serverPort;
    case 6: return containerId;
    case 7: return applicationStatus;
    case 8: return errorResult;
    case 9: return messageType;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: appOrderId = value$ != null ? value$.toString() : null; break;
    case 1: userId = value$ != null ? value$.toString() : null; break;
    case 2: storageId = value$ != null ? value$.toString() : null; break;
    case 3: serverUrl = value$ != null ? value$.toString() : null; break;
    case 4: applicationName = value$ != null ? value$.toString() : null; break;
    case 5: serverPort = (java.lang.Integer)value$; break;
    case 6: containerId = value$ != null ? value$.toString() : null; break;
    case 7: applicationStatus = (com.jar.service.system.common.avro.model.ApplicationStatus)value$; break;
    case 8: errorResult = value$ != null ? value$.toString() : null; break;
    case 9: messageType = (com.jar.service.system.common.avro.model.MessageType)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'appOrderId' field.
   * @return The value of the 'appOrderId' field.
   */
  public java.lang.String getAppOrderId() {
    return appOrderId;
  }


  /**
   * Sets the value of the 'appOrderId' field.
   * @param value the value to set.
   */
  public void setAppOrderId(java.lang.String value) {
    this.appOrderId = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.String getUserId() {
    return userId;
  }


  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.String value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'storageId' field.
   * @return The value of the 'storageId' field.
   */
  public java.lang.String getStorageId() {
    return storageId;
  }


  /**
   * Sets the value of the 'storageId' field.
   * @param value the value to set.
   */
  public void setStorageId(java.lang.String value) {
    this.storageId = value;
  }

  /**
   * Gets the value of the 'serverUrl' field.
   * @return The value of the 'serverUrl' field.
   */
  public java.lang.String getServerUrl() {
    return serverUrl;
  }


  /**
   * Sets the value of the 'serverUrl' field.
   * @param value the value to set.
   */
  public void setServerUrl(java.lang.String value) {
    this.serverUrl = value;
  }

  /**
   * Gets the value of the 'applicationName' field.
   * @return The value of the 'applicationName' field.
   */
  public java.lang.String getApplicationName() {
    return applicationName;
  }


  /**
   * Sets the value of the 'applicationName' field.
   * @param value the value to set.
   */
  public void setApplicationName(java.lang.String value) {
    this.applicationName = value;
  }

  /**
   * Gets the value of the 'serverPort' field.
   * @return The value of the 'serverPort' field.
   */
  public int getServerPort() {
    return serverPort;
  }


  /**
   * Sets the value of the 'serverPort' field.
   * @param value the value to set.
   */
  public void setServerPort(int value) {
    this.serverPort = value;
  }

  /**
   * Gets the value of the 'containerId' field.
   * @return The value of the 'containerId' field.
   */
  public java.lang.String getContainerId() {
    return containerId;
  }


  /**
   * Sets the value of the 'containerId' field.
   * @param value the value to set.
   */
  public void setContainerId(java.lang.String value) {
    this.containerId = value;
  }

  /**
   * Gets the value of the 'applicationStatus' field.
   * @return The value of the 'applicationStatus' field.
   */
  public com.jar.service.system.common.avro.model.ApplicationStatus getApplicationStatus() {
    return applicationStatus;
  }


  /**
   * Sets the value of the 'applicationStatus' field.
   * @param value the value to set.
   */
  public void setApplicationStatus(com.jar.service.system.common.avro.model.ApplicationStatus value) {
    this.applicationStatus = value;
  }

  /**
   * Gets the value of the 'errorResult' field.
   * @return The value of the 'errorResult' field.
   */
  public java.lang.String getErrorResult() {
    return errorResult;
  }


  /**
   * Sets the value of the 'errorResult' field.
   * @param value the value to set.
   */
  public void setErrorResult(java.lang.String value) {
    this.errorResult = value;
  }

  /**
   * Gets the value of the 'messageType' field.
   * @return The value of the 'messageType' field.
   */
  public com.jar.service.system.common.avro.model.MessageType getMessageType() {
    return messageType;
  }


  /**
   * Sets the value of the 'messageType' field.
   * @param value the value to set.
   */
  public void setMessageType(com.jar.service.system.common.avro.model.MessageType value) {
    this.messageType = value;
  }

  /**
   * Creates a new AppOrderAvroModel RecordBuilder.
   * @return A new AppOrderAvroModel RecordBuilder
   */
  public static com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder newBuilder() {
    return new com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder();
  }

  /**
   * Creates a new AppOrderAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AppOrderAvroModel RecordBuilder
   */
  public static com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder newBuilder(com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder other) {
    if (other == null) {
      return new com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder();
    } else {
      return new com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new AppOrderAvroModel RecordBuilder by copying an existing AppOrderAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new AppOrderAvroModel RecordBuilder
   */
  public static com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder newBuilder(com.jar.service.system.common.avro.model.AppOrderAvroModel other) {
    if (other == null) {
      return new com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder();
    } else {
      return new com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for AppOrderAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AppOrderAvroModel>
    implements org.apache.avro.data.RecordBuilder<AppOrderAvroModel> {

    private java.lang.String appOrderId;
    private java.lang.String userId;
    private java.lang.String storageId;
    private java.lang.String serverUrl;
    private java.lang.String applicationName;
    private int serverPort;
    private java.lang.String containerId;
    private com.jar.service.system.common.avro.model.ApplicationStatus applicationStatus;
    private java.lang.String errorResult;
    private com.jar.service.system.common.avro.model.MessageType messageType;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.appOrderId)) {
        this.appOrderId = data().deepCopy(fields()[0].schema(), other.appOrderId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.storageId)) {
        this.storageId = data().deepCopy(fields()[2].schema(), other.storageId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.serverUrl)) {
        this.serverUrl = data().deepCopy(fields()[3].schema(), other.serverUrl);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.applicationName)) {
        this.applicationName = data().deepCopy(fields()[4].schema(), other.applicationName);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.serverPort)) {
        this.serverPort = data().deepCopy(fields()[5].schema(), other.serverPort);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.containerId)) {
        this.containerId = data().deepCopy(fields()[6].schema(), other.containerId);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.applicationStatus)) {
        this.applicationStatus = data().deepCopy(fields()[7].schema(), other.applicationStatus);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.errorResult)) {
        this.errorResult = data().deepCopy(fields()[8].schema(), other.errorResult);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.messageType)) {
        this.messageType = data().deepCopy(fields()[9].schema(), other.messageType);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing AppOrderAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.jar.service.system.common.avro.model.AppOrderAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.appOrderId)) {
        this.appOrderId = data().deepCopy(fields()[0].schema(), other.appOrderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.storageId)) {
        this.storageId = data().deepCopy(fields()[2].schema(), other.storageId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.serverUrl)) {
        this.serverUrl = data().deepCopy(fields()[3].schema(), other.serverUrl);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.applicationName)) {
        this.applicationName = data().deepCopy(fields()[4].schema(), other.applicationName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.serverPort)) {
        this.serverPort = data().deepCopy(fields()[5].schema(), other.serverPort);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.containerId)) {
        this.containerId = data().deepCopy(fields()[6].schema(), other.containerId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.applicationStatus)) {
        this.applicationStatus = data().deepCopy(fields()[7].schema(), other.applicationStatus);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.errorResult)) {
        this.errorResult = data().deepCopy(fields()[8].schema(), other.errorResult);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.messageType)) {
        this.messageType = data().deepCopy(fields()[9].schema(), other.messageType);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'appOrderId' field.
      * @return The value.
      */
    public java.lang.String getAppOrderId() {
      return appOrderId;
    }


    /**
      * Sets the value of the 'appOrderId' field.
      * @param value The value of 'appOrderId'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder setAppOrderId(java.lang.String value) {
      validate(fields()[0], value);
      this.appOrderId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'appOrderId' field has been set.
      * @return True if the 'appOrderId' field has been set, false otherwise.
      */
    public boolean hasAppOrderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'appOrderId' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder clearAppOrderId() {
      appOrderId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.String getUserId() {
      return userId;
    }


    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder setUserId(java.lang.String value) {
      validate(fields()[1], value);
      this.userId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'storageId' field.
      * @return The value.
      */
    public java.lang.String getStorageId() {
      return storageId;
    }


    /**
      * Sets the value of the 'storageId' field.
      * @param value The value of 'storageId'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder setStorageId(java.lang.String value) {
      validate(fields()[2], value);
      this.storageId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'storageId' field has been set.
      * @return True if the 'storageId' field has been set, false otherwise.
      */
    public boolean hasStorageId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'storageId' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder clearStorageId() {
      storageId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'serverUrl' field.
      * @return The value.
      */
    public java.lang.String getServerUrl() {
      return serverUrl;
    }


    /**
      * Sets the value of the 'serverUrl' field.
      * @param value The value of 'serverUrl'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder setServerUrl(java.lang.String value) {
      validate(fields()[3], value);
      this.serverUrl = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'serverUrl' field has been set.
      * @return True if the 'serverUrl' field has been set, false otherwise.
      */
    public boolean hasServerUrl() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'serverUrl' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder clearServerUrl() {
      serverUrl = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'applicationName' field.
      * @return The value.
      */
    public java.lang.String getApplicationName() {
      return applicationName;
    }


    /**
      * Sets the value of the 'applicationName' field.
      * @param value The value of 'applicationName'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder setApplicationName(java.lang.String value) {
      validate(fields()[4], value);
      this.applicationName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'applicationName' field has been set.
      * @return True if the 'applicationName' field has been set, false otherwise.
      */
    public boolean hasApplicationName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'applicationName' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder clearApplicationName() {
      applicationName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'serverPort' field.
      * @return The value.
      */
    public int getServerPort() {
      return serverPort;
    }


    /**
      * Sets the value of the 'serverPort' field.
      * @param value The value of 'serverPort'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder setServerPort(int value) {
      validate(fields()[5], value);
      this.serverPort = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'serverPort' field has been set.
      * @return True if the 'serverPort' field has been set, false otherwise.
      */
    public boolean hasServerPort() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'serverPort' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder clearServerPort() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'containerId' field.
      * @return The value.
      */
    public java.lang.String getContainerId() {
      return containerId;
    }


    /**
      * Sets the value of the 'containerId' field.
      * @param value The value of 'containerId'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder setContainerId(java.lang.String value) {
      validate(fields()[6], value);
      this.containerId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'containerId' field has been set.
      * @return True if the 'containerId' field has been set, false otherwise.
      */
    public boolean hasContainerId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'containerId' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder clearContainerId() {
      containerId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'applicationStatus' field.
      * @return The value.
      */
    public com.jar.service.system.common.avro.model.ApplicationStatus getApplicationStatus() {
      return applicationStatus;
    }


    /**
      * Sets the value of the 'applicationStatus' field.
      * @param value The value of 'applicationStatus'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder setApplicationStatus(com.jar.service.system.common.avro.model.ApplicationStatus value) {
      validate(fields()[7], value);
      this.applicationStatus = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'applicationStatus' field has been set.
      * @return True if the 'applicationStatus' field has been set, false otherwise.
      */
    public boolean hasApplicationStatus() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'applicationStatus' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder clearApplicationStatus() {
      applicationStatus = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'errorResult' field.
      * @return The value.
      */
    public java.lang.String getErrorResult() {
      return errorResult;
    }


    /**
      * Sets the value of the 'errorResult' field.
      * @param value The value of 'errorResult'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder setErrorResult(java.lang.String value) {
      validate(fields()[8], value);
      this.errorResult = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'errorResult' field has been set.
      * @return True if the 'errorResult' field has been set, false otherwise.
      */
    public boolean hasErrorResult() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'errorResult' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder clearErrorResult() {
      errorResult = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'messageType' field.
      * @return The value.
      */
    public com.jar.service.system.common.avro.model.MessageType getMessageType() {
      return messageType;
    }


    /**
      * Sets the value of the 'messageType' field.
      * @param value The value of 'messageType'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder setMessageType(com.jar.service.system.common.avro.model.MessageType value) {
      validate(fields()[9], value);
      this.messageType = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'messageType' field has been set.
      * @return True if the 'messageType' field has been set, false otherwise.
      */
    public boolean hasMessageType() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'messageType' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.AppOrderAvroModel.Builder clearMessageType() {
      messageType = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AppOrderAvroModel build() {
      try {
        AppOrderAvroModel record = new AppOrderAvroModel();
        record.appOrderId = fieldSetFlags()[0] ? this.appOrderId : (java.lang.String) defaultValue(fields()[0]);
        record.userId = fieldSetFlags()[1] ? this.userId : (java.lang.String) defaultValue(fields()[1]);
        record.storageId = fieldSetFlags()[2] ? this.storageId : (java.lang.String) defaultValue(fields()[2]);
        record.serverUrl = fieldSetFlags()[3] ? this.serverUrl : (java.lang.String) defaultValue(fields()[3]);
        record.applicationName = fieldSetFlags()[4] ? this.applicationName : (java.lang.String) defaultValue(fields()[4]);
        record.serverPort = fieldSetFlags()[5] ? this.serverPort : (java.lang.Integer) defaultValue(fields()[5]);
        record.containerId = fieldSetFlags()[6] ? this.containerId : (java.lang.String) defaultValue(fields()[6]);
        record.applicationStatus = fieldSetFlags()[7] ? this.applicationStatus : (com.jar.service.system.common.avro.model.ApplicationStatus) defaultValue(fields()[7]);
        record.errorResult = fieldSetFlags()[8] ? this.errorResult : (java.lang.String) defaultValue(fields()[8]);
        record.messageType = fieldSetFlags()[9] ? this.messageType : (com.jar.service.system.common.avro.model.MessageType) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AppOrderAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<AppOrderAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AppOrderAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<AppOrderAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.appOrderId);

    out.writeString(this.userId);

    out.writeString(this.storageId);

    out.writeString(this.serverUrl);

    out.writeString(this.applicationName);

    out.writeInt(this.serverPort);

    out.writeString(this.containerId);

    out.writeEnum(this.applicationStatus.ordinal());

    out.writeString(this.errorResult);

    out.writeEnum(this.messageType.ordinal());

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.appOrderId = in.readString();

      this.userId = in.readString();

      this.storageId = in.readString();

      this.serverUrl = in.readString();

      this.applicationName = in.readString();

      this.serverPort = in.readInt();

      this.containerId = in.readString();

      this.applicationStatus = com.jar.service.system.common.avro.model.ApplicationStatus.values()[in.readEnum()];

      this.errorResult = in.readString();

      this.messageType = com.jar.service.system.common.avro.model.MessageType.values()[in.readEnum()];

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.appOrderId = in.readString();
          break;

        case 1:
          this.userId = in.readString();
          break;

        case 2:
          this.storageId = in.readString();
          break;

        case 3:
          this.serverUrl = in.readString();
          break;

        case 4:
          this.applicationName = in.readString();
          break;

        case 5:
          this.serverPort = in.readInt();
          break;

        case 6:
          this.containerId = in.readString();
          break;

        case 7:
          this.applicationStatus = com.jar.service.system.common.avro.model.ApplicationStatus.values()[in.readEnum()];
          break;

        case 8:
          this.errorResult = in.readString();
          break;

        case 9:
          this.messageType = com.jar.service.system.common.avro.model.MessageType.values()[in.readEnum()];
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}











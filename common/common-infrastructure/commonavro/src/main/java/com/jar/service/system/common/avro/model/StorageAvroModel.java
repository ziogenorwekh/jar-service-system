/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.jar.service.system.common.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class StorageAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3160298161629608160L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StorageAvroModel\",\"namespace\":\"com.jar.service.system.common.avro.model\",\"fields\":[{\"name\":\"storageId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"filename\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"fileUrl\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"fileType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"error\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"appOrderId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"storageStatus\",\"type\":{\"type\":\"enum\",\"name\":\"StorageStatus\",\"symbols\":[\"INITIALIZED\",\"SAVED\",\"DELETED\",\"REJECTED\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<StorageAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StorageAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<StorageAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<StorageAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<StorageAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this StorageAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a StorageAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a StorageAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static StorageAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String storageId;
  private java.lang.String filename;
  private java.lang.String fileUrl;
  private java.lang.String fileType;
  private java.lang.String error;
  private java.lang.String appOrderId;
  private com.jar.service.system.common.avro.model.StorageStatus storageStatus;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StorageAvroModel() {}

  /**
   * All-args constructor.
   * @param storageId The new value for storageId
   * @param filename The new value for filename
   * @param fileUrl The new value for fileUrl
   * @param fileType The new value for fileType
   * @param error The new value for error
   * @param appOrderId The new value for appOrderId
   * @param storageStatus The new value for storageStatus
   */
  public StorageAvroModel(java.lang.String storageId, java.lang.String filename, java.lang.String fileUrl, java.lang.String fileType, java.lang.String error, java.lang.String appOrderId, com.jar.service.system.common.avro.model.StorageStatus storageStatus) {
    this.storageId = storageId;
    this.filename = filename;
    this.fileUrl = fileUrl;
    this.fileType = fileType;
    this.error = error;
    this.appOrderId = appOrderId;
    this.storageStatus = storageStatus;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return storageId;
    case 1: return filename;
    case 2: return fileUrl;
    case 3: return fileType;
    case 4: return error;
    case 5: return appOrderId;
    case 6: return storageStatus;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: storageId = value$ != null ? value$.toString() : null; break;
    case 1: filename = value$ != null ? value$.toString() : null; break;
    case 2: fileUrl = value$ != null ? value$.toString() : null; break;
    case 3: fileType = value$ != null ? value$.toString() : null; break;
    case 4: error = value$ != null ? value$.toString() : null; break;
    case 5: appOrderId = value$ != null ? value$.toString() : null; break;
    case 6: storageStatus = (com.jar.service.system.common.avro.model.StorageStatus)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'storageId' field.
   * @return The value of the 'storageId' field.
   */
  public java.lang.String getStorageId() {
    return storageId;
  }


  /**
   * Sets the value of the 'storageId' field.
   * @param value the value to set.
   */
  public void setStorageId(java.lang.String value) {
    this.storageId = value;
  }

  /**
   * Gets the value of the 'filename' field.
   * @return The value of the 'filename' field.
   */
  public java.lang.String getFilename() {
    return filename;
  }


  /**
   * Sets the value of the 'filename' field.
   * @param value the value to set.
   */
  public void setFilename(java.lang.String value) {
    this.filename = value;
  }

  /**
   * Gets the value of the 'fileUrl' field.
   * @return The value of the 'fileUrl' field.
   */
  public java.lang.String getFileUrl() {
    return fileUrl;
  }


  /**
   * Sets the value of the 'fileUrl' field.
   * @param value the value to set.
   */
  public void setFileUrl(java.lang.String value) {
    this.fileUrl = value;
  }

  /**
   * Gets the value of the 'fileType' field.
   * @return The value of the 'fileType' field.
   */
  public java.lang.String getFileType() {
    return fileType;
  }


  /**
   * Sets the value of the 'fileType' field.
   * @param value the value to set.
   */
  public void setFileType(java.lang.String value) {
    this.fileType = value;
  }

  /**
   * Gets the value of the 'error' field.
   * @return The value of the 'error' field.
   */
  public java.lang.String getError() {
    return error;
  }


  /**
   * Sets the value of the 'error' field.
   * @param value the value to set.
   */
  public void setError(java.lang.String value) {
    this.error = value;
  }

  /**
   * Gets the value of the 'appOrderId' field.
   * @return The value of the 'appOrderId' field.
   */
  public java.lang.String getAppOrderId() {
    return appOrderId;
  }


  /**
   * Sets the value of the 'appOrderId' field.
   * @param value the value to set.
   */
  public void setAppOrderId(java.lang.String value) {
    this.appOrderId = value;
  }

  /**
   * Gets the value of the 'storageStatus' field.
   * @return The value of the 'storageStatus' field.
   */
  public com.jar.service.system.common.avro.model.StorageStatus getStorageStatus() {
    return storageStatus;
  }


  /**
   * Sets the value of the 'storageStatus' field.
   * @param value the value to set.
   */
  public void setStorageStatus(com.jar.service.system.common.avro.model.StorageStatus value) {
    this.storageStatus = value;
  }

  /**
   * Creates a new StorageAvroModel RecordBuilder.
   * @return A new StorageAvroModel RecordBuilder
   */
  public static com.jar.service.system.common.avro.model.StorageAvroModel.Builder newBuilder() {
    return new com.jar.service.system.common.avro.model.StorageAvroModel.Builder();
  }

  /**
   * Creates a new StorageAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StorageAvroModel RecordBuilder
   */
  public static com.jar.service.system.common.avro.model.StorageAvroModel.Builder newBuilder(com.jar.service.system.common.avro.model.StorageAvroModel.Builder other) {
    if (other == null) {
      return new com.jar.service.system.common.avro.model.StorageAvroModel.Builder();
    } else {
      return new com.jar.service.system.common.avro.model.StorageAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new StorageAvroModel RecordBuilder by copying an existing StorageAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new StorageAvroModel RecordBuilder
   */
  public static com.jar.service.system.common.avro.model.StorageAvroModel.Builder newBuilder(com.jar.service.system.common.avro.model.StorageAvroModel other) {
    if (other == null) {
      return new com.jar.service.system.common.avro.model.StorageAvroModel.Builder();
    } else {
      return new com.jar.service.system.common.avro.model.StorageAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for StorageAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StorageAvroModel>
    implements org.apache.avro.data.RecordBuilder<StorageAvroModel> {

    private java.lang.String storageId;
    private java.lang.String filename;
    private java.lang.String fileUrl;
    private java.lang.String fileType;
    private java.lang.String error;
    private java.lang.String appOrderId;
    private com.jar.service.system.common.avro.model.StorageStatus storageStatus;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.jar.service.system.common.avro.model.StorageAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.storageId)) {
        this.storageId = data().deepCopy(fields()[0].schema(), other.storageId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.filename)) {
        this.filename = data().deepCopy(fields()[1].schema(), other.filename);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.fileUrl)) {
        this.fileUrl = data().deepCopy(fields()[2].schema(), other.fileUrl);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.fileType)) {
        this.fileType = data().deepCopy(fields()[3].schema(), other.fileType);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.error)) {
        this.error = data().deepCopy(fields()[4].schema(), other.error);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.appOrderId)) {
        this.appOrderId = data().deepCopy(fields()[5].schema(), other.appOrderId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.storageStatus)) {
        this.storageStatus = data().deepCopy(fields()[6].schema(), other.storageStatus);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing StorageAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.jar.service.system.common.avro.model.StorageAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.storageId)) {
        this.storageId = data().deepCopy(fields()[0].schema(), other.storageId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.filename)) {
        this.filename = data().deepCopy(fields()[1].schema(), other.filename);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fileUrl)) {
        this.fileUrl = data().deepCopy(fields()[2].schema(), other.fileUrl);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fileType)) {
        this.fileType = data().deepCopy(fields()[3].schema(), other.fileType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.error)) {
        this.error = data().deepCopy(fields()[4].schema(), other.error);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.appOrderId)) {
        this.appOrderId = data().deepCopy(fields()[5].schema(), other.appOrderId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.storageStatus)) {
        this.storageStatus = data().deepCopy(fields()[6].schema(), other.storageStatus);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'storageId' field.
      * @return The value.
      */
    public java.lang.String getStorageId() {
      return storageId;
    }


    /**
      * Sets the value of the 'storageId' field.
      * @param value The value of 'storageId'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder setStorageId(java.lang.String value) {
      validate(fields()[0], value);
      this.storageId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'storageId' field has been set.
      * @return True if the 'storageId' field has been set, false otherwise.
      */
    public boolean hasStorageId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'storageId' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder clearStorageId() {
      storageId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'filename' field.
      * @return The value.
      */
    public java.lang.String getFilename() {
      return filename;
    }


    /**
      * Sets the value of the 'filename' field.
      * @param value The value of 'filename'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder setFilename(java.lang.String value) {
      validate(fields()[1], value);
      this.filename = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'filename' field has been set.
      * @return True if the 'filename' field has been set, false otherwise.
      */
    public boolean hasFilename() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'filename' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder clearFilename() {
      filename = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'fileUrl' field.
      * @return The value.
      */
    public java.lang.String getFileUrl() {
      return fileUrl;
    }


    /**
      * Sets the value of the 'fileUrl' field.
      * @param value The value of 'fileUrl'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder setFileUrl(java.lang.String value) {
      validate(fields()[2], value);
      this.fileUrl = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'fileUrl' field has been set.
      * @return True if the 'fileUrl' field has been set, false otherwise.
      */
    public boolean hasFileUrl() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'fileUrl' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder clearFileUrl() {
      fileUrl = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'fileType' field.
      * @return The value.
      */
    public java.lang.String getFileType() {
      return fileType;
    }


    /**
      * Sets the value of the 'fileType' field.
      * @param value The value of 'fileType'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder setFileType(java.lang.String value) {
      validate(fields()[3], value);
      this.fileType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'fileType' field has been set.
      * @return True if the 'fileType' field has been set, false otherwise.
      */
    public boolean hasFileType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'fileType' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder clearFileType() {
      fileType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'error' field.
      * @return The value.
      */
    public java.lang.String getError() {
      return error;
    }


    /**
      * Sets the value of the 'error' field.
      * @param value The value of 'error'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder setError(java.lang.String value) {
      validate(fields()[4], value);
      this.error = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'error' field has been set.
      * @return True if the 'error' field has been set, false otherwise.
      */
    public boolean hasError() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'error' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder clearError() {
      error = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'appOrderId' field.
      * @return The value.
      */
    public java.lang.String getAppOrderId() {
      return appOrderId;
    }


    /**
      * Sets the value of the 'appOrderId' field.
      * @param value The value of 'appOrderId'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder setAppOrderId(java.lang.String value) {
      validate(fields()[5], value);
      this.appOrderId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'appOrderId' field has been set.
      * @return True if the 'appOrderId' field has been set, false otherwise.
      */
    public boolean hasAppOrderId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'appOrderId' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder clearAppOrderId() {
      appOrderId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'storageStatus' field.
      * @return The value.
      */
    public com.jar.service.system.common.avro.model.StorageStatus getStorageStatus() {
      return storageStatus;
    }


    /**
      * Sets the value of the 'storageStatus' field.
      * @param value The value of 'storageStatus'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder setStorageStatus(com.jar.service.system.common.avro.model.StorageStatus value) {
      validate(fields()[6], value);
      this.storageStatus = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'storageStatus' field has been set.
      * @return True if the 'storageStatus' field has been set, false otherwise.
      */
    public boolean hasStorageStatus() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'storageStatus' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.StorageAvroModel.Builder clearStorageStatus() {
      storageStatus = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StorageAvroModel build() {
      try {
        StorageAvroModel record = new StorageAvroModel();
        record.storageId = fieldSetFlags()[0] ? this.storageId : (java.lang.String) defaultValue(fields()[0]);
        record.filename = fieldSetFlags()[1] ? this.filename : (java.lang.String) defaultValue(fields()[1]);
        record.fileUrl = fieldSetFlags()[2] ? this.fileUrl : (java.lang.String) defaultValue(fields()[2]);
        record.fileType = fieldSetFlags()[3] ? this.fileType : (java.lang.String) defaultValue(fields()[3]);
        record.error = fieldSetFlags()[4] ? this.error : (java.lang.String) defaultValue(fields()[4]);
        record.appOrderId = fieldSetFlags()[5] ? this.appOrderId : (java.lang.String) defaultValue(fields()[5]);
        record.storageStatus = fieldSetFlags()[6] ? this.storageStatus : (com.jar.service.system.common.avro.model.StorageStatus) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StorageAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<StorageAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StorageAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<StorageAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.storageId);

    out.writeString(this.filename);

    out.writeString(this.fileUrl);

    out.writeString(this.fileType);

    out.writeString(this.error);

    out.writeString(this.appOrderId);

    out.writeEnum(this.storageStatus.ordinal());

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.storageId = in.readString();

      this.filename = in.readString();

      this.fileUrl = in.readString();

      this.fileType = in.readString();

      this.error = in.readString();

      this.appOrderId = in.readString();

      this.storageStatus = com.jar.service.system.common.avro.model.StorageStatus.values()[in.readEnum()];

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.storageId = in.readString();
          break;

        case 1:
          this.filename = in.readString();
          break;

        case 2:
          this.fileUrl = in.readString();
          break;

        case 3:
          this.fileType = in.readString();
          break;

        case 4:
          this.error = in.readString();
          break;

        case 5:
          this.appOrderId = in.readString();
          break;

        case 6:
          this.storageStatus = com.jar.service.system.common.avro.model.StorageStatus.values()[in.readEnum()];
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}











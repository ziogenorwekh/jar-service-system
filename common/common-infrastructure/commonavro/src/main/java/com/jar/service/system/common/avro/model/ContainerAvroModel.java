/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.jar.service.system.common.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ContainerAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6657365489936182751L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ContainerAvroModel\",\"namespace\":\"com.jar.service.system.common.avro.model\",\"fields\":[{\"name\":\"containerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"appOrderId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"applicationName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"error\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"dockerContainerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"javaVersion\",\"type\":\"int\"},{\"name\":\"s3URL\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"serverPort\",\"type\":\"int\"},{\"name\":\"containerStatus\",\"type\":{\"type\":\"enum\",\"name\":\"ContainerStatus\",\"symbols\":[\"INITIALIZED\",\"STARTED\",\"STOPPED\",\"DELETED\",\"REJECTED\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ContainerAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ContainerAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ContainerAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ContainerAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ContainerAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ContainerAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ContainerAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ContainerAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ContainerAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String containerId;
  private java.lang.String appOrderId;
  private java.lang.String applicationName;
  private java.lang.String error;
  private java.lang.String dockerContainerId;
  private int javaVersion;
  private java.lang.String s3URL;
  private int serverPort;
  private com.jar.service.system.common.avro.model.ContainerStatus containerStatus;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ContainerAvroModel() {}

  /**
   * All-args constructor.
   * @param containerId The new value for containerId
   * @param appOrderId The new value for appOrderId
   * @param applicationName The new value for applicationName
   * @param error The new value for error
   * @param dockerContainerId The new value for dockerContainerId
   * @param javaVersion The new value for javaVersion
   * @param s3URL The new value for s3URL
   * @param serverPort The new value for serverPort
   * @param containerStatus The new value for containerStatus
   */
  public ContainerAvroModel(java.lang.String containerId, java.lang.String appOrderId, java.lang.String applicationName, java.lang.String error, java.lang.String dockerContainerId, java.lang.Integer javaVersion, java.lang.String s3URL, java.lang.Integer serverPort, com.jar.service.system.common.avro.model.ContainerStatus containerStatus) {
    this.containerId = containerId;
    this.appOrderId = appOrderId;
    this.applicationName = applicationName;
    this.error = error;
    this.dockerContainerId = dockerContainerId;
    this.javaVersion = javaVersion;
    this.s3URL = s3URL;
    this.serverPort = serverPort;
    this.containerStatus = containerStatus;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return containerId;
    case 1: return appOrderId;
    case 2: return applicationName;
    case 3: return error;
    case 4: return dockerContainerId;
    case 5: return javaVersion;
    case 6: return s3URL;
    case 7: return serverPort;
    case 8: return containerStatus;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: containerId = value$ != null ? value$.toString() : null; break;
    case 1: appOrderId = value$ != null ? value$.toString() : null; break;
    case 2: applicationName = value$ != null ? value$.toString() : null; break;
    case 3: error = value$ != null ? value$.toString() : null; break;
    case 4: dockerContainerId = value$ != null ? value$.toString() : null; break;
    case 5: javaVersion = (java.lang.Integer)value$; break;
    case 6: s3URL = value$ != null ? value$.toString() : null; break;
    case 7: serverPort = (java.lang.Integer)value$; break;
    case 8: containerStatus = (com.jar.service.system.common.avro.model.ContainerStatus)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'containerId' field.
   * @return The value of the 'containerId' field.
   */
  public java.lang.String getContainerId() {
    return containerId;
  }


  /**
   * Sets the value of the 'containerId' field.
   * @param value the value to set.
   */
  public void setContainerId(java.lang.String value) {
    this.containerId = value;
  }

  /**
   * Gets the value of the 'appOrderId' field.
   * @return The value of the 'appOrderId' field.
   */
  public java.lang.String getAppOrderId() {
    return appOrderId;
  }


  /**
   * Sets the value of the 'appOrderId' field.
   * @param value the value to set.
   */
  public void setAppOrderId(java.lang.String value) {
    this.appOrderId = value;
  }

  /**
   * Gets the value of the 'applicationName' field.
   * @return The value of the 'applicationName' field.
   */
  public java.lang.String getApplicationName() {
    return applicationName;
  }


  /**
   * Sets the value of the 'applicationName' field.
   * @param value the value to set.
   */
  public void setApplicationName(java.lang.String value) {
    this.applicationName = value;
  }

  /**
   * Gets the value of the 'error' field.
   * @return The value of the 'error' field.
   */
  public java.lang.String getError() {
    return error;
  }


  /**
   * Sets the value of the 'error' field.
   * @param value the value to set.
   */
  public void setError(java.lang.String value) {
    this.error = value;
  }

  /**
   * Gets the value of the 'dockerContainerId' field.
   * @return The value of the 'dockerContainerId' field.
   */
  public java.lang.String getDockerContainerId() {
    return dockerContainerId;
  }


  /**
   * Sets the value of the 'dockerContainerId' field.
   * @param value the value to set.
   */
  public void setDockerContainerId(java.lang.String value) {
    this.dockerContainerId = value;
  }

  /**
   * Gets the value of the 'javaVersion' field.
   * @return The value of the 'javaVersion' field.
   */
  public int getJavaVersion() {
    return javaVersion;
  }


  /**
   * Sets the value of the 'javaVersion' field.
   * @param value the value to set.
   */
  public void setJavaVersion(int value) {
    this.javaVersion = value;
  }

  /**
   * Gets the value of the 's3URL' field.
   * @return The value of the 's3URL' field.
   */
  public java.lang.String getS3URL() {
    return s3URL;
  }


  /**
   * Sets the value of the 's3URL' field.
   * @param value the value to set.
   */
  public void setS3URL(java.lang.String value) {
    this.s3URL = value;
  }

  /**
   * Gets the value of the 'serverPort' field.
   * @return The value of the 'serverPort' field.
   */
  public int getServerPort() {
    return serverPort;
  }


  /**
   * Sets the value of the 'serverPort' field.
   * @param value the value to set.
   */
  public void setServerPort(int value) {
    this.serverPort = value;
  }

  /**
   * Gets the value of the 'containerStatus' field.
   * @return The value of the 'containerStatus' field.
   */
  public com.jar.service.system.common.avro.model.ContainerStatus getContainerStatus() {
    return containerStatus;
  }


  /**
   * Sets the value of the 'containerStatus' field.
   * @param value the value to set.
   */
  public void setContainerStatus(com.jar.service.system.common.avro.model.ContainerStatus value) {
    this.containerStatus = value;
  }

  /**
   * Creates a new ContainerAvroModel RecordBuilder.
   * @return A new ContainerAvroModel RecordBuilder
   */
  public static com.jar.service.system.common.avro.model.ContainerAvroModel.Builder newBuilder() {
    return new com.jar.service.system.common.avro.model.ContainerAvroModel.Builder();
  }

  /**
   * Creates a new ContainerAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ContainerAvroModel RecordBuilder
   */
  public static com.jar.service.system.common.avro.model.ContainerAvroModel.Builder newBuilder(com.jar.service.system.common.avro.model.ContainerAvroModel.Builder other) {
    if (other == null) {
      return new com.jar.service.system.common.avro.model.ContainerAvroModel.Builder();
    } else {
      return new com.jar.service.system.common.avro.model.ContainerAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new ContainerAvroModel RecordBuilder by copying an existing ContainerAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new ContainerAvroModel RecordBuilder
   */
  public static com.jar.service.system.common.avro.model.ContainerAvroModel.Builder newBuilder(com.jar.service.system.common.avro.model.ContainerAvroModel other) {
    if (other == null) {
      return new com.jar.service.system.common.avro.model.ContainerAvroModel.Builder();
    } else {
      return new com.jar.service.system.common.avro.model.ContainerAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for ContainerAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ContainerAvroModel>
    implements org.apache.avro.data.RecordBuilder<ContainerAvroModel> {

    private java.lang.String containerId;
    private java.lang.String appOrderId;
    private java.lang.String applicationName;
    private java.lang.String error;
    private java.lang.String dockerContainerId;
    private int javaVersion;
    private java.lang.String s3URL;
    private int serverPort;
    private com.jar.service.system.common.avro.model.ContainerStatus containerStatus;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.jar.service.system.common.avro.model.ContainerAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.containerId)) {
        this.containerId = data().deepCopy(fields()[0].schema(), other.containerId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.appOrderId)) {
        this.appOrderId = data().deepCopy(fields()[1].schema(), other.appOrderId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.applicationName)) {
        this.applicationName = data().deepCopy(fields()[2].schema(), other.applicationName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.error)) {
        this.error = data().deepCopy(fields()[3].schema(), other.error);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.dockerContainerId)) {
        this.dockerContainerId = data().deepCopy(fields()[4].schema(), other.dockerContainerId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.javaVersion)) {
        this.javaVersion = data().deepCopy(fields()[5].schema(), other.javaVersion);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.s3URL)) {
        this.s3URL = data().deepCopy(fields()[6].schema(), other.s3URL);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.serverPort)) {
        this.serverPort = data().deepCopy(fields()[7].schema(), other.serverPort);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.containerStatus)) {
        this.containerStatus = data().deepCopy(fields()[8].schema(), other.containerStatus);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing ContainerAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.jar.service.system.common.avro.model.ContainerAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.containerId)) {
        this.containerId = data().deepCopy(fields()[0].schema(), other.containerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.appOrderId)) {
        this.appOrderId = data().deepCopy(fields()[1].schema(), other.appOrderId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.applicationName)) {
        this.applicationName = data().deepCopy(fields()[2].schema(), other.applicationName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.error)) {
        this.error = data().deepCopy(fields()[3].schema(), other.error);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.dockerContainerId)) {
        this.dockerContainerId = data().deepCopy(fields()[4].schema(), other.dockerContainerId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.javaVersion)) {
        this.javaVersion = data().deepCopy(fields()[5].schema(), other.javaVersion);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.s3URL)) {
        this.s3URL = data().deepCopy(fields()[6].schema(), other.s3URL);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.serverPort)) {
        this.serverPort = data().deepCopy(fields()[7].schema(), other.serverPort);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.containerStatus)) {
        this.containerStatus = data().deepCopy(fields()[8].schema(), other.containerStatus);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'containerId' field.
      * @return The value.
      */
    public java.lang.String getContainerId() {
      return containerId;
    }


    /**
      * Sets the value of the 'containerId' field.
      * @param value The value of 'containerId'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder setContainerId(java.lang.String value) {
      validate(fields()[0], value);
      this.containerId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'containerId' field has been set.
      * @return True if the 'containerId' field has been set, false otherwise.
      */
    public boolean hasContainerId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'containerId' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder clearContainerId() {
      containerId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'appOrderId' field.
      * @return The value.
      */
    public java.lang.String getAppOrderId() {
      return appOrderId;
    }


    /**
      * Sets the value of the 'appOrderId' field.
      * @param value The value of 'appOrderId'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder setAppOrderId(java.lang.String value) {
      validate(fields()[1], value);
      this.appOrderId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'appOrderId' field has been set.
      * @return True if the 'appOrderId' field has been set, false otherwise.
      */
    public boolean hasAppOrderId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'appOrderId' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder clearAppOrderId() {
      appOrderId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'applicationName' field.
      * @return The value.
      */
    public java.lang.String getApplicationName() {
      return applicationName;
    }


    /**
      * Sets the value of the 'applicationName' field.
      * @param value The value of 'applicationName'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder setApplicationName(java.lang.String value) {
      validate(fields()[2], value);
      this.applicationName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'applicationName' field has been set.
      * @return True if the 'applicationName' field has been set, false otherwise.
      */
    public boolean hasApplicationName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'applicationName' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder clearApplicationName() {
      applicationName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'error' field.
      * @return The value.
      */
    public java.lang.String getError() {
      return error;
    }


    /**
      * Sets the value of the 'error' field.
      * @param value The value of 'error'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder setError(java.lang.String value) {
      validate(fields()[3], value);
      this.error = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'error' field has been set.
      * @return True if the 'error' field has been set, false otherwise.
      */
    public boolean hasError() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'error' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder clearError() {
      error = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'dockerContainerId' field.
      * @return The value.
      */
    public java.lang.String getDockerContainerId() {
      return dockerContainerId;
    }


    /**
      * Sets the value of the 'dockerContainerId' field.
      * @param value The value of 'dockerContainerId'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder setDockerContainerId(java.lang.String value) {
      validate(fields()[4], value);
      this.dockerContainerId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'dockerContainerId' field has been set.
      * @return True if the 'dockerContainerId' field has been set, false otherwise.
      */
    public boolean hasDockerContainerId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'dockerContainerId' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder clearDockerContainerId() {
      dockerContainerId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'javaVersion' field.
      * @return The value.
      */
    public int getJavaVersion() {
      return javaVersion;
    }


    /**
      * Sets the value of the 'javaVersion' field.
      * @param value The value of 'javaVersion'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder setJavaVersion(int value) {
      validate(fields()[5], value);
      this.javaVersion = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'javaVersion' field has been set.
      * @return True if the 'javaVersion' field has been set, false otherwise.
      */
    public boolean hasJavaVersion() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'javaVersion' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder clearJavaVersion() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 's3URL' field.
      * @return The value.
      */
    public java.lang.String getS3URL() {
      return s3URL;
    }


    /**
      * Sets the value of the 's3URL' field.
      * @param value The value of 's3URL'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder setS3URL(java.lang.String value) {
      validate(fields()[6], value);
      this.s3URL = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 's3URL' field has been set.
      * @return True if the 's3URL' field has been set, false otherwise.
      */
    public boolean hasS3URL() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 's3URL' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder clearS3URL() {
      s3URL = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'serverPort' field.
      * @return The value.
      */
    public int getServerPort() {
      return serverPort;
    }


    /**
      * Sets the value of the 'serverPort' field.
      * @param value The value of 'serverPort'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder setServerPort(int value) {
      validate(fields()[7], value);
      this.serverPort = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'serverPort' field has been set.
      * @return True if the 'serverPort' field has been set, false otherwise.
      */
    public boolean hasServerPort() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'serverPort' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder clearServerPort() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'containerStatus' field.
      * @return The value.
      */
    public com.jar.service.system.common.avro.model.ContainerStatus getContainerStatus() {
      return containerStatus;
    }


    /**
      * Sets the value of the 'containerStatus' field.
      * @param value The value of 'containerStatus'.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder setContainerStatus(com.jar.service.system.common.avro.model.ContainerStatus value) {
      validate(fields()[8], value);
      this.containerStatus = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'containerStatus' field has been set.
      * @return True if the 'containerStatus' field has been set, false otherwise.
      */
    public boolean hasContainerStatus() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'containerStatus' field.
      * @return This builder.
      */
    public com.jar.service.system.common.avro.model.ContainerAvroModel.Builder clearContainerStatus() {
      containerStatus = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ContainerAvroModel build() {
      try {
        ContainerAvroModel record = new ContainerAvroModel();
        record.containerId = fieldSetFlags()[0] ? this.containerId : (java.lang.String) defaultValue(fields()[0]);
        record.appOrderId = fieldSetFlags()[1] ? this.appOrderId : (java.lang.String) defaultValue(fields()[1]);
        record.applicationName = fieldSetFlags()[2] ? this.applicationName : (java.lang.String) defaultValue(fields()[2]);
        record.error = fieldSetFlags()[3] ? this.error : (java.lang.String) defaultValue(fields()[3]);
        record.dockerContainerId = fieldSetFlags()[4] ? this.dockerContainerId : (java.lang.String) defaultValue(fields()[4]);
        record.javaVersion = fieldSetFlags()[5] ? this.javaVersion : (java.lang.Integer) defaultValue(fields()[5]);
        record.s3URL = fieldSetFlags()[6] ? this.s3URL : (java.lang.String) defaultValue(fields()[6]);
        record.serverPort = fieldSetFlags()[7] ? this.serverPort : (java.lang.Integer) defaultValue(fields()[7]);
        record.containerStatus = fieldSetFlags()[8] ? this.containerStatus : (com.jar.service.system.common.avro.model.ContainerStatus) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ContainerAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<ContainerAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ContainerAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<ContainerAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.containerId);

    out.writeString(this.appOrderId);

    out.writeString(this.applicationName);

    out.writeString(this.error);

    out.writeString(this.dockerContainerId);

    out.writeInt(this.javaVersion);

    out.writeString(this.s3URL);

    out.writeInt(this.serverPort);

    out.writeEnum(this.containerStatus.ordinal());

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.containerId = in.readString();

      this.appOrderId = in.readString();

      this.applicationName = in.readString();

      this.error = in.readString();

      this.dockerContainerId = in.readString();

      this.javaVersion = in.readInt();

      this.s3URL = in.readString();

      this.serverPort = in.readInt();

      this.containerStatus = com.jar.service.system.common.avro.model.ContainerStatus.values()[in.readEnum()];

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.containerId = in.readString();
          break;

        case 1:
          this.appOrderId = in.readString();
          break;

        case 2:
          this.applicationName = in.readString();
          break;

        case 3:
          this.error = in.readString();
          break;

        case 4:
          this.dockerContainerId = in.readString();
          break;

        case 5:
          this.javaVersion = in.readInt();
          break;

        case 6:
          this.s3URL = in.readString();
          break;

        case 7:
          this.serverPort = in.readInt();
          break;

        case 8:
          this.containerStatus = com.jar.service.system.common.avro.model.ContainerStatus.values()[in.readEnum()];
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










